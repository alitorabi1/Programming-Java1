Programming_I_Test_Spring_2016
===============================
• Close book exam
• CLass notes, books, and Internet are not allowed
• You must submit your test (java file only) through OmniVox no later than 12:30.

	HAVE A GOOD EXAM!



Consider the following program segment:
//import classes
public class YourName_Test_1
{
	public static void main(String[] args)
	{
	   //variable declaration
	   //executable statements
	}
}

a. Write a Java statement that imports the class Scanner.
b. Write a Java statement that declares console to be a Scanner object for inputting data from the standard input device.
c. Write Java statements that declare and initialize the following named constants: SECRET of type int initialized to 11; RATE of type double initialized to 12.50.
d. Write Java statements that declare the following variables: num1, num2, and newNum of type int; name of type String; hoursWorked and wages of type double.
e. Write Java statements that prompt the user to input two integers and store the first number into num1 and the second number into num2.
f. Write a Java statement(s) that outputs the value of num1 and num2, indicating which is num1 and which is num2. For example, if num1 is 8 and num2 is 5, then the output is:
	The value of num1 = 8 and the value of num2 = 5.
g. Write a Java statement that multiplies that value of num1 by 2, adds the value of num2 to it, and then stores the result in newNum. Then write a Java statement that outputs the value of newNum.
h. Write a Java statement that updates the value of newNum by adding the value of the named constant SECRET. Then, write a Java statement that outputs the value of newNum with an appropriate message.
i. Write Java statements that prompt the user to enter a person’s last name and then store the last name into the variable name.
j. Write Java statements that prompt the user to enter a decimal number between 0 and 70 and then store the number entered into hoursWorked.
k. Write a Java statement that multiplies that value of the named constant RATE with the value of hoursWorked and stores the result into the variable wages.
l. Write Java statements that produce the following output:


Name: 		//output the value of the variable name
Pay Rate: $ 	//output the value of the named constant RATE
Hours Worked: 	//output the value of the variable hoursWorked
Salary: $ 	//output the value of the variable wages

For example, if the value of name is "Rainbow" and hoursWorked is 45.50, then the output is:
Name: Rainbow
Pay Rate: $12.50
Hours Worked: 45.50
Salary: $568.75


m. Test run your program (twice) on the following input data:
i. num1 = 13, num2 = 28; name = "Jacobson"; hoursWorked = 48.30.
ii. num1 = 32, num2 = 15; name = "Cynthia"; hoursWorked = 58.45.

